Create Table SEG_ROLES(
COD_ROLES SERIAL PRIMARY KEY   NOT NULL, -- codigo de tabla roles
	TIP_ROLES VARCHAR(20)      NOT NULL, -- 'tipos de Roles del usuario'
	DES_ROLES VARCHAR (50)     NOT NULL, -- 'Descripcion de los roles'
	FEC_MODIFICACION TIMESTAMP NOT NULL -- 'Fecha de modificacion de roles'
);

Create Table SEG_PERMISOS(
COD_PERMISOS SERIAL PRIMARY KEY NOT NULL,    --'codigo de tabla permisos'
	COD_ROL INTEGER NULL,                     --'codigo de tabla roles'
	PER_INSERCION VARCHAR(1)    NOT NULL,    --'Permiso de insertar'
	PER_ELIMINAR VARCHAR(1)     NOT NULL,    --'Permiso de Eliminar'
	PER_ACTUALIZAR VARCHAR (1)  NOT NULL,    --'Permiso de editar'
	PER_CONSULTAR VARCHAR(1)    NOT NULL,    --'Permiso de seleccionar'
	FEC_MODIFICACION TIMESTAMP  NOT NULL,    --'Fecha de conseder los permisos'
	FOREIGN KEY (COD_ROL) REFERENCES SEG_ROLES(COD_ROLES)
);

Create type ESTADO as ENUM ('ACTIVO','BLOQUEADO','NUEVO'); --'Estado del Usuario en el Sistema' 
Create type TIPO as ENUM ('USUARIO','EMPLEADO','DONANTE'); --'tipo de usuario'
Create Table PERSON_USUARIOS(
    COD_USUARIO SERIAL PRIMARY KEY NOT NULL, --'codigo de tabla usuarios'
	COD_ROL INTEGER                    NULL, --'codigo de la tabla ROLES'
	NOM_USUARIO VARCHAR (70)       NOT NULL, --'Nombre del Usuario'
	NUM_ID VARCHAR (30)            NOT NULL, --'IDENTIDAD del Usuario'
	DIR_RESIDENCIA VARCHAR(100)    NOT NULL, --'Lugar donde reside'
	COD_TELEFONO VARCHAR(20)           NULL, --'Codigo de la tablas Telefonos'
	COD_EMAIL VARCHAR (50)             NULL, --'Codigo de la tabla Email'
	CONTRASEÑA VARCHAR (100)       NOT NULL, --'contraseña del usuario '
	EST_USUARIO ESTADO NOT NULL default 'NUEVO', --'Estado del Usuario en el Sistema' 
	TIP_USUARIO TIPO NOT NULL default 'USUARIO', --'tipo de usuario'
	FEC_CREACION TIMESTAMP         NOT NULL, --'Fecha que se registro en el sistema'
	FOREIGN KEY (COD_ROL) REFERENCES SEG_ROLES(COD_ROLES)
);

Create Type TELEFONO AS ENUM('P','T','C'); --'tipo de telefono del usuario'
Create Table PERSON_TELEFONOS(
COD_TELEFONO SERIAL PRIMARY KEY    NOT NULL, --'codigo de la tabla'
	COD_USUARIO INTEGER                NULL, --'codigo de la tabla usuarios'
	NUM_TELEFONO VARCHAR(32)       NOT NULL, --'numero de telefono de usuario'
	TIP_TELEFONO TELEFONO not null default 'P', --'tipo de telefono del usuario'
	FOREIGN KEY (COD_USUARIO) REFERENCES PERSON_USUARIOS(COD_USUARIO)
);


Create Table PERSON_RELTEL(
COD_RELTEL SERIAL PRIMARY KEY NOT NULL, --'codigo de la tabla'
	COD_TELEFONO INTEGER      NOT NULL, --'codigo de la tabla telefonos'
	COD_USUARIO INTEGER       NOT NULL, --'codigo de la tabla usuarios'
	FOREIGN KEY (COD_TELEFONO) REFERENCES PERSON_TELEFONOS(COD_TELEFONO),
	FOREIGN KEY (COD_USUARIO) REFERENCES PERSON_USUARIOS(COD_USUARIO)
);

Create Table SEG_PREG_USER(
COD_PREGUNTA SERIAL PRIMARY KEY NOT NULL,   --'codigo de la tabla'
	NOM_PREGUNTA VARCHAR(50)    NOT NULL,   --'preguntas para el usuario'
	COD_USUARIO INTEGER         NOT NULL,   --'usuario que creo la pregunta'
	FEC_CREACION TIMESTAMP      NOT NULL    --'fecha de creacion de las preguntas'	
);

Create Table SEG_PREG_RESPUESTA(
COD_RESPUEST SERIAL PRIMARY KEY NOT NULL,  --'codigo de la tabla'
	COD_PREGUNTA INTEGER        NOT NULL,  --'codigo de tablas preguntas'
	COD_USUARIO INTEGER         NOT NULL,  --'codigo de tablas usuarios'
	DES_RESPUESTA VARCHAR (70)  NOT NULL,  --'respuesta de preguntas'
	FEC_RESPUEST TIMESTAMP      NOT NULL,  --'fecha de contestacion de respuesta'
	FOREIGN KEY (COD_PREGUNTA) REFERENCES SEG_PREG_USER(COD_PREGUNTA),
    FOREIGN KEY (COD_USUARIO) REFERENCES PERSON_USUARIOS(COD_USUARIO)
);


Create Table PERSON_EMPLEADOS(
    COD_EMPLEADO SERIAL PRIMARY KEY NOT NULL,  --'codigo de tabla usuarios'
	COD_USUARIO INTEGER             NOT NULL,  --'codigo de tabla usuarios'
	NOM_EMPLEADO VARCHAR (70)       NOT NULL,  --'Nombre del Usuario'
	NUM_ID VARCHAR (30)             NOT NULL,  --'IDENTIDAD del Usuario'
	DIR_RESIDENCIA VARCHAR(100)     NOT NULL,  --'Lugar donde reside'
	COD_TELEFONO VARCHAR(20)           NULL,   --'Codigo de la tablas Telefonos'
	COD_EMAIL VARCHAR (50)             NULL,   --'Codigo de la tabla Email'
	CONTRASEÑA VARCHAR (100)        NOT NULL,  --'contraseña del usuario '
	EST_USUARIO ESTADO NOT NULL default 'NUEVO', --'Estado del Usuario en el Sistema' 
	FEC_CREACION TIMESTAMP         NOT NULL --'Fecha que se registro en el sistema',
);

Create Table PERSON_DONANTES(
    COD_DONANTES SERIAL PRIMARY KEY NOT NULL, --'codigo de tabla usuarios'
	COD_USUARIO INTEGER             NOT NULL,  --'codigo de tabla usuarios'
	NOM_EMPLEADO VARCHAR (70)       NOT NULL, --'Nombre del Usuario'
	NUM_ID VARCHAR (30)             NOT NULL, --'IDENTIDAD del Usuario'
	DIR_RESIDENCIA VARCHAR(100)     NOT NULL, --'Lugar donde reside'
	COD_TELEFONO VARCHAR(20)           NULL,  --'Codigo de la tablas Telefonos'
	COD_EMAIL VARCHAR (50)             NULL,  --'Codigo de la tabla Email'
	CONTRASEÑA VARCHAR (100)       NOT NULL,  --'contraseña del usuario '
	EST_USUARIO ESTADO NOT NULL default 'NUEVO', --'Estado del Usuario en el Sistema' 
	FEC_CREACION TIMESTAMP         NOT NULL  --'Fecha que se registro en el sistema'
);


-- MODULO SACE

create table PERSON_DIRECCIONES (
COD_DIRECCION serial primary key NOT NULL, -- codigo de la tabla departamento
DIR_DEPARTAMENTO varchar(50)     NOT NULL, --'Direccion del departamento'
DIR_MUNICIPIO varchar(50)        NOT NULL, -- 'Direccion del municipio'
DIR_ALDEA varchar (50)           NOT NULL, -- 'Direccin de la aldea'
DES_DETALLE varchar(50)              NULL  -- 'Detalle de direccion'
);

Create Type EST_DONA AS ENUM ('ENTREGADA','PENDIENTE','POR CONFIRMAR','CANCELADA');
create table DONACIONES(
COD_DONACION serial primary key NOT NULL, --'codigo de donacion relizada'
NOM_INSTITUCION varchar(40) NOT NULL,     --'Nombre de la institución'
TIP_DONACION    varchar(40) NULL,         -- 'Tipo de Donación'  
EST_DONACION    EST_DONA    NOT NULL default 'POR CONFIRMAR',--'Estado de la Donación'
DES_DONACION    varchar(40) NOT NULL,     --'Detalle de la Donación'
FEC_DONACION    date        --Fecha en que se realizo la donacion
);

--Tabla Evaluación Para obtener el nombre de la institucion, su ubicacion,
--destalles con los que cuenta la institucion y el estado. y asi poder hacer una evaluacion con codigo de la institucion
create table AXE_EVALUACION(
   COD_EVALUACION SERIAL primary key NOT NULL, -- 'Codigo de la tabla evaluacion' 
   NOM_INSTITUCION varchar(40) NOT NULL,       -- 'Nombre de la institucion'
   COD_DIRECCION varchar(40) NOT NULL,         -- 'Dirección de la institución'
   DES_EVALUACION varchar(20) NULL,            -- 'Detalle de la evaluación'
   EST_EVALUACION varchar(20) NULL            -- ' estado de la evaluacion'
);

--Tabla SACE sirve para conocer el nombre y codigo  de la institucion, la categoria en la que se encuentra, las donaciones, sus tipos y el detalle.
create table AXE_SACE(
    COD_SACE SERIAL primary key NOT NULL, --'Codigo de la tabla sace'
    NOM_INSTITUCION VARCHAR(40) NOT NULL, --'Nombre de la institución'
    DIR_DIRECCION VARCHAR(40)   NOT NULL, --'Dirección de la institución'
    TIP_CATEGORIA varchar(40)   NOT NULL, --'Tipo de categoria de la institución'
	DES_DONACIONES varchar(40)  NOT NULL, --'Descripción de las donaciones'
	TIP_DONACION varchar(40)    NOT NULL, --'Tipo de Donaciones'
	DES_SACE varchar(40)        NOT NULL --'Detalles'
);